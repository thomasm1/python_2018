
Required Items:
Raspberry Pi
Brick Pi
4GB SD Card
Wifi Dongle
Temporary: monitor with HDMI Input, USB Hub, Keyboard, Mouse, Thumb Drive

SETTING UP THE SD CARD
-----------------------
Download the Raspbian wheezy image from http://www.raspberrypi.org/downloads
Unzip the file to get an img file
Dowload Fedora ARM Installer from http://fedoraproject.org/wiki/Fedora_ARM_Installer#Windows_Vista_.26_7
Unzip and open fedora-arm-insaller.exe as Administrator
Browse for the img file obtained earlier
Plug in an empty SD card and press the refresh button.
Select the SD card from the list. Note that all data on the card will be erased
Click install and wait till it says "Install Complete"
Reference: http://learn.adafruit.com/adafruit-raspberry-pi-lesson-1-preparing-and-sd-card-for-your-raspberry-pi/overview

FIRST TIME CONFIG
-----------------
Connect the Keyboard and Mouse to Raspberry Pi(use a hub if needed)
Insert the SD card into the Rasbperry Pi and power it on through the microUSB port.
Turn on Boot to desktop option 
Select configure keyboard and change it to your preference
Go to Advanced options and enable SSH server
Select Finish and wait till the Raspberry Pi reboots.
Reference: http://learn.adafruit.com/adafruits-raspberry-pi-lesson-2-first-time-configuration/overview



INSTALLING & SETTING UP VNC SERVER
----------------------------------
Open the terminal and enter the command:
	sudo apt-get update
This should take some time. After it is done, enter:
	sudo apt-get install tightvncserver
Confirm and proceed to installation by pressing Y
After the installation is complete, enter the command:
	vncserver :1
You'll be asked to enter and confirm a password. 
Then, You'll be asked if you like to enter a view-only password. Press N
Now, Your vnc server is installed, But it doesn't run on every boot.
Open the terminal and type the following commands one by one
	cd /home/pi
	cd .config
	mkdir autostart
	cd autostart
	nano tightvnc.desktop
	
This will open a text editor. Enter the following:
=======================
[Desktop Entry]
Type=Application
Name=TightVNC
Exec=vncserver :1
StartupNotify=false
=======================
Then press Ctrl+X, Y and Return. 

Download RealVNC from http://www.realvnc.com/ for your platform
Enter the IP Address followed by :1 and press Connect
	Eg: 192.168.1.105:1
Enter the password and you'll see your RaspberryPi desktop right away!
Now, the Keyboard, Mouse and Monitor maybe unplugged.
Reference: http://learn.adafruit.com/adafruit-raspberry-pi-lesson-7-remote-control-with-vnc/overview

SETTING UP THE RPI WHEEZY FOR BRICKPI
-------------------------------------
WIRING PI
^^^^^^^^^
You need wiringPi to be installed on the RPi.
Get the modified version from __ . This supports higher baud rates.
Unzip the file to RPi desktop and then open the terminal 
Navigate to the wiringPi directory by entering:
	cd /home/pi/Desktop/wiringPi
Change permissions for build file to execute by entering:
	chmod 777 build
Now, excute the build file by entering:
	./build
The wiringPi Library should be set up automatically.
Reference: https://projects.drogon.net/raspberry-pi/wiringpi/i2c-library/

UART CLOCK SPEED
^^^^^^^^^^^^^^^^
You will also need to increase the UART clock speed.
To do that, open up /boot/config.txt by entering:
	cd /boot
	sudo nano config.txt
Check if a property named init_uart_clock exists.
Create/Change line:
	init_uart_clock=32000000

I2C
^^^
In order to use I2C (like with the Nunchuk), you need to install and load I2C.
To install I2C, enter:
	sudo apt-get install libi2c-dev
To load and set speed(in k baud), enter:
	gpio load i2c 10
I2C needs to be loaded at every boot.

SERIAL PINS
^^^^^^^^^^^
In order to use the Raspberry Piâ€™s serial port, we need to disable getty (the program that displays login screen) 
We need to open the file at /etc/inittab and remove a line(probably the last line)
Open the file by entering:
	sudo nano /etc/inittab
Now, find the line that says
	T0:23:respawn:/sbin/getty -L ttyAMA0 115200 vt100
And comment it out by adding # in front of it
Save the file and exit. 

We need to prevent the Raspberry Pi from sending out data to the serial ports when it boots
Go to file /boot/cmdline.txt by entering:
	sudo nano /boot/cmdline.txt
Find the follwing content and remove it
	console=ttyAMA0,115200 kgdboc=ttyAMA0,115200

//attach
COMPILING THE TEST CODE
-----------------------
Now, get the test code from __
It should hae "Test BrickPi lib.c" with BrickPi.h & tick.h
Place these files in a thumb drive & plug it into the RPi
Now enter:
	cd /media
	dir
Find your pendrive and navigate to the directory.Eg:
	cd Transcend
Now enter the following code to compile with gcc:
	gcc -o program "Test BrickPi lib.c" -lrt -lm -L/usr/local/lib -lwiringPi
The code will be compiled into a file named 'program' on the same directory.
Copy the file to desktop.
Navigate to desktop by entering:
	cd /home/pi/Desktop
Change the permission of 'program' file to executable, by entering:
	chmod 744 program
Open up the program by entering:
	./program