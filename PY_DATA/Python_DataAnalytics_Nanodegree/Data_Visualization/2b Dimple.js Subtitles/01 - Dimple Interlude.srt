1
00:00:00,400 --> 00:00:03,713
Shown here is the homepage for dimple js.

2
00:00:03,713 --> 00:00:06,960
You can find it at dimplejs.org.

3
00:00:06,960 --> 00:00:10,960
As I mentioned, dimple is a library built atop of d3

4
00:00:10,960 --> 00:00:14,630
that allows us to work at the abstraction level lower chart.

5
00:00:14,630 --> 00:00:17,660
Rather than lower level abstractions like visual end codings,

6
00:00:17,660 --> 00:00:20,710
such as shape, scale and positioning.

7
00:00:20,710 --> 00:00:23,470
The reason I'll be using dimple.js instead of

8
00:00:23,470 --> 00:00:27,240
another charting library is three-fold, as outlined on their site.

9
00:00:28,790 --> 00:00:32,012
Dimple is built atop d3.

10
00:00:32,012 --> 00:00:36,427
Has a very gentle learning curve and designed for analysts.

11
00:00:36,427 --> 00:00:38,120
And the last reason and

12
00:00:38,120 --> 00:00:44,090
what's pretty unique to dimple is that it exposes the native d3 objects.

13
00:00:44,090 --> 00:00:46,930
So if you do want to get more complicated and

14
00:00:46,930 --> 00:00:50,920
ween yourself off of using all of dimple's convenience methods.

15
00:00:50,920 --> 00:00:53,820
You can access the underlying d3 objects themselves.

16
00:00:55,700 --> 00:00:58,470
As I mentioned dimple.js exists as a tool to

17
00:00:58,470 --> 00:01:01,350
make business analysts more productive with charts.

18
00:01:01,350 --> 00:01:05,860
But to allow the flexibility to extend the visualizations for power users.

19
00:01:05,860 --> 00:01:11,530
Even though we saw d3 in lesson one, we only manipulated HTML objects and

20
00:01:11,530 --> 00:01:16,220
a little SVG, and did not get into any data driven operations.

21
00:01:16,220 --> 00:01:22,066
We will be using d3 itself to create interactive visualizations and

22
00:01:22,066 --> 00:01:24,496
animations in lesson four.

23
00:01:24,496 --> 00:01:27,304
But for now, since we're only creating charts and

24
00:01:27,304 --> 00:01:29,400
since many awesome libraries exist.

25
00:01:29,400 --> 00:01:34,184
They abstract a lot of the complexities of building charts yourself with d3,

26
00:01:34,184 --> 00:01:36,660
we'll be using the libraries instead.

27
00:01:37,770 --> 00:01:43,430
This pattern that d3 defines to bind data to some elements on the page

28
00:01:43,430 --> 00:01:47,910
is often one of the most confusing topics for newcomers to d3 to understand.

29
00:01:49,830 --> 00:01:56,740
Most often due to the .enter and .exit commands you can call on your data.

30
00:01:56,740 --> 00:02:01,960
These are only really relevant if you're adding and removing elements on a given

31
00:02:01,960 --> 00:02:06,660
webpage in an animation, transition, or interaction.

32
00:02:06,660 --> 00:02:10,990
They are necessary, however, for any simple visualization you do,

33
00:02:10,990 --> 00:02:13,870
even if you don't have any interaction or animation in it.

34
00:02:15,310 --> 00:02:18,510
Rather than explain this pattern now and

35
00:02:18,510 --> 00:02:22,880
having you wonder why there's this dot enter, or how it could be used.

36
00:02:22,880 --> 00:02:25,620
I'll save the explanation for lesson four when

37
00:02:25,620 --> 00:02:29,570
we will fully understand what's going on behind the scenes here.

38
00:02:29,570 --> 00:02:33,480
And how we can leverage it to create some pretty awesome interactive

39
00:02:33,480 --> 00:02:35,220
animations and visualizations.

