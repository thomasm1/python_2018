1
00:00:00,200 --> 00:00:06,040
But also, more interestingly, has the __data__ property,

2
00:00:06,040 --> 00:00:07,930
which corresponds to an object.

3
00:00:07,930 --> 00:00:12,950
Opening up that object, we see we have the fields of a single row

4
00:00:12,950 --> 00:00:17,730
from our data file, which we saw earlier, as the .enter selection.

5
00:00:17,730 --> 00:00:23,875
But now instead of corresponding to only __data__ with

6
00:00:23,875 --> 00:00:28,880
the fields, it now is actually bound to a circle.

7
00:00:28,880 --> 00:00:33,070
So the combination of the enter selection with the append,

8
00:00:33,070 --> 00:00:38,750
merges the data from our data file, with the svg circle element.

9
00:00:38,750 --> 00:00:44,350
And this is where the mysterious data of d3's magical data bound lives.

10
00:00:44,350 --> 00:00:47,330
It's simply, a JavaScript object,

11
00:00:47,330 --> 00:00:52,130
attached as a property to the svg node, living in the DOM.

12
00:00:52,130 --> 00:00:57,280
And as we can see here, on the left again is the selection of what

13
00:00:57,280 --> 00:01:01,460
lives on the page either as HTML or SVG.

14
00:01:01,460 --> 00:01:08,130
Starting with the select of the parent SVG element, which contained in it has

15
00:01:08,130 --> 00:01:15,460
a SVG circle element, for each row of our data file, worldcup.tsv.

16
00:01:15,460 --> 00:01:21,303
Which d3 binds with it's data function, as we can see here corresponding

17
00:01:21,303 --> 00:01:26,679
to the link, to a row of our file which was loaded and stored in the data

18
00:01:26,679 --> 00:01:33,130
variable which again is a single row from our worldcup.tsv data file.

19
00:01:33,130 --> 00:01:37,070
So think of these linkages, as the magic data bind.

20
00:01:37,070 --> 00:01:40,240
Everything on the left side, as what's present on the page.

21
00:01:40,240 --> 00:01:42,450
Either as SVG or HTML.

22
00:01:42,450 --> 00:01:47,060
And everything on the right side, as either a JavaScript object, or

23
00:01:47,060 --> 00:01:49,690
some piece of our data file.

24
00:01:49,690 --> 00:01:57,020
And here, I represent all 836 rows simply by the dotted arrow, which

25
00:01:57,020 --> 00:02:03,110
means that this extends all the way down, binding every row to every circle.

26
00:02:03,110 --> 00:02:07,300
If any of this was unclear, I encourage you to read through Mike's post on

27
00:02:07,300 --> 00:02:10,340
the subject, which is contained in the lecture notes.

28
00:02:10,340 --> 00:02:15,240
Or if you want a more complete treatment of the subject, look at the book

29
00:02:15,240 --> 00:02:21,360
reference in the lecture notes, Virtual Storytelling With D3, by Richie S King,

30
00:02:21,360 --> 00:02:26,880
which inspired this graphic and explanation, of the mysterious databind process.

