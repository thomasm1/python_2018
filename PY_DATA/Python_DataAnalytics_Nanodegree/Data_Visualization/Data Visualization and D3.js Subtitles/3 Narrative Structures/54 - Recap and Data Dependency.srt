1
00:00:00,200 --> 00:00:03,620
So just to recap, our circles, while we bound them and

2
00:00:03,620 --> 00:00:09,170
they were on the page, they had no x or y position, radius, or fill color.

3
00:00:09,170 --> 00:00:14,390
So what this chunk of code basically says in English is, for

4
00:00:14,390 --> 00:00:20,110
each data point or circle, change its x position, according to its date and

5
00:00:20,110 --> 00:00:23,860
its y position according to its attendance.

6
00:00:23,860 --> 00:00:26,100
Add an attribute of radius.

7
00:00:26,100 --> 00:00:29,920
In this case it's a radius of three as we said previously.

8
00:00:29,920 --> 00:00:32,420
And fill it with a color.

9
00:00:32,420 --> 00:00:34,060
In this case blue.

10
00:00:34,060 --> 00:00:37,180
Before I move on I just wanted to make one more point

11
00:00:37,180 --> 00:00:39,400
about the anonymous accessor functions.

12
00:00:39,400 --> 00:00:42,870
I'll go over rather a different way of looking at them.

13
00:00:42,870 --> 00:00:46,430
While you can think of these as any other function it takes some input

14
00:00:46,430 --> 00:00:51,870
in this case D which corresponds to an individual row from our data and

15
00:00:51,870 --> 00:00:54,190
gives some output, in this case, for

16
00:00:54,190 --> 00:00:58,460
the exposition of pixel value returned from the time scale.

17
00:00:58,460 --> 00:01:03,160
I often like to think of the accessor functions as analogous to the properties

18
00:01:03,160 --> 00:01:07,540
of a class, for folks who are comfortable with object-oriented programming, or

19
00:01:07,540 --> 00:01:10,980
in a more simple sense, simply a variable.

20
00:01:10,980 --> 00:01:16,610
In this case, the accessor function for setting the exposition returns

21
00:01:16,610 --> 00:01:22,660
a variable value depending on what data point gets passed into it.

22
00:01:22,660 --> 00:01:27,500
So again while you can put some logic to transform your data or

23
00:01:27,500 --> 00:01:30,830
perform some other actions inside of the accessor function,

24
00:01:30,830 --> 00:01:35,340
typically I only use in the sense of pulling out some data.

25
00:01:35,340 --> 00:01:40,650
And returning some value, that's dependent on that value I pulled out.

26
00:01:40,650 --> 00:01:44,440
So in most of the uses of this anonymous accessor functions in D3,

27
00:01:44,440 --> 00:01:49,840
it's often useful to think of them as some data dependent value.

28
00:01:49,840 --> 00:01:52,160
Based on what the bound data is,

29
00:01:52,160 --> 00:01:57,780
the accessor function should return some value derived from the data.

30
00:01:57,780 --> 00:02:03,000
And again this allows us to customize each function for each data point.

31
00:02:03,000 --> 00:02:09,148
In this case for datum one placed at the x position of datum one's date.

32
00:02:09,148 --> 00:02:15,230
For datum two placed at the exposition of datum two's date and so forth all

33
00:02:15,230 --> 00:02:21,180
the way to datam 836 or however many pieces of data you have in your data set.

