1
00:00:00,480 --> 00:00:03,840
One downside of using the native dom selectors,

2
00:00:03,840 --> 00:00:09,360
such as document.querySelector or document.getelementbyID is

3
00:00:09,360 --> 00:00:13,820
that what is returned is a dom node and not a D3 object.

4
00:00:13,820 --> 00:00:19,310
If we try to call any D3 functions on what's returned from the dom selectors,

5
00:00:19,310 --> 00:00:22,910
we'll get an error saying a method is not defined.

6
00:00:22,910 --> 00:00:27,280
In order to leverage the full power of the D3 chainable API,

7
00:00:27,280 --> 00:00:30,720
we need to create a D3 element from a selection so

8
00:00:30,720 --> 00:00:34,988
that the selection is wrapped with all of the functions D3 defines.

9
00:00:34,988 --> 00:00:37,760
The d3.select function looks very

10
00:00:37,760 --> 00:00:42,710
similar to query selector defined in the api of the dom.

11
00:00:42,710 --> 00:00:47,620
And just as we passed in .viewermain as a CSS selector to

12
00:00:47,620 --> 00:00:52,210
signify that we want a dom node that had class viewer-main,

13
00:00:52,210 --> 00:00:56,040
we can do the same with d3.select function.

14
00:00:56,040 --> 00:01:00,340
Notice what gets returned is an array rather than a single dom node.

