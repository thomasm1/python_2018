1
00:00:00,390 --> 00:00:03,830
And to this SVG, we can begin inserting shapes.

2
00:00:03,830 --> 00:00:07,190
Let us revisit what we know about visual encodings, and try to

3
00:00:07,190 --> 00:00:12,300
recreate one circle from the Gapminder Wealth & Health of Nations example.

4
00:00:13,300 --> 00:00:18,190
Let us start by trying to recreate the circle that represents China.

5
00:00:18,190 --> 00:00:24,413
As you can see here, China has a life expectancy of 75 years and

6
00:00:24,413 --> 00:00:29,486
income per person, GDP per capita of 8,347 and

7
00:00:29,486 --> 00:00:33,534
a total population of 1.35 billion.

8
00:00:33,534 --> 00:00:38,160
When faced with creating any visualization based on data,

9
00:00:38,160 --> 00:00:43,431
you need to figure out a way to transform data values, in this case,

10
00:00:43,431 --> 00:00:47,964
life expectancy of 75, income per person of 8347,

11
00:00:47,964 --> 00:00:52,690
into the appropriate coordinates on the x and y plane.

12
00:00:52,690 --> 00:00:55,650
Since we're building a visualization in the browser,

13
00:00:55,650 --> 00:01:00,810
we often have to map the values of our data to pixel values.

14
00:01:00,810 --> 00:01:06,320
Since D3 was created exactly for this purpose, it has many convenience functions

15
00:01:06,320 --> 00:01:11,040
for converting data values into its corresponding pixel value.

16
00:01:11,040 --> 00:01:12,550
The most commonly used functions for

17
00:01:12,550 --> 00:01:16,820
this purpose in D3 can be found in the d3.scale module.

