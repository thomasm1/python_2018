1
00:00:00,560 --> 00:00:04,980
Now that we've implemented some d3 code and put what we learned about visual and

2
00:00:04,980 --> 00:00:09,090
coding into practice I just wanted to recap where we are quickly.

3
00:00:09,090 --> 00:00:13,040
In addition to being readily acceptable to a large audience,

4
00:00:13,040 --> 00:00:18,030
d3 has a very nice API, or application programming interface.

5
00:00:18,030 --> 00:00:21,530
This allows the library to function in a declarative manner.

6
00:00:21,530 --> 00:00:24,480
Or rather, you tell d3 what you want,

7
00:00:24,480 --> 00:00:27,390
not how you want it to accomplish the task.

8
00:00:27,390 --> 00:00:32,473
By decoupling the specification of an operation from the execution of

9
00:00:32,473 --> 00:00:35,757
that operation, d3 allows the user, you.

10
00:00:35,757 --> 00:00:39,220
To focus on the specific application you're developing.

11
00:00:39,220 --> 00:00:43,170
While still enabling engineers to possibly optimize the processing of

12
00:00:43,170 --> 00:00:44,750
those operations.

13
00:00:44,750 --> 00:00:49,220
Another interesting side effect of this is that the back end or

14
00:00:49,220 --> 00:00:53,588
the graphics engine that d3 renders to could possibly be swapped out.

15
00:00:53,588 --> 00:00:58,630
I mentioned d3 renders the SVG and HTML.

16
00:00:58,630 --> 00:01:03,170
But you could imagine it rendering directly to HTML5 canvas or

17
00:01:03,170 --> 00:01:05,980
even webGL for increased performance.

18
00:01:07,230 --> 00:01:10,700
What do I mean by a declarative API exactly?

19
00:01:10,700 --> 00:01:16,956
Well, for example, you do not need to tell the browser to draw a circle

20
00:01:16,956 --> 00:01:23,758
at pixel 50 by 100, and then another circle at pixel 100 by 175.

21
00:01:23,758 --> 00:01:27,590
And finally a line that connects these two circles.

22
00:01:27,590 --> 00:01:32,740
For every data point you may have in let's say a JavaScript array repeat this

23
00:01:32,740 --> 00:01:37,010
process and continue drawing circles and lines between them.

24
00:01:37,010 --> 00:01:41,410
This process would be very tedious and possibly error-prone if for

25
00:01:41,410 --> 00:01:45,610
every datum you have, you have to tell it exactly where to draw the circle.

26
00:01:45,610 --> 00:01:48,060
And then, exactly how to draw the lines connecting them.

